{
	"scopeName": "source.ula",
	"patterns": [{ "include": "#expression" }],
	"repository": {
	  "expression": {
		"patterns": [
			{ "include": "#keywords"},
			{ "include": "#constants" },
			{ "include": "#Operators"},
			{ "include": "#types" },
			{ "include": "#look_read" },
			{ "include": "#identificador" },
			{ "include": "#Digit" },
			{ "include": "#comentario"},
			{ "include": "#paren-expression"}
		]
	  },
	  "comentario": {
		  "match": "[\\#]([[:punct:]]*[[:alnum:]]*[[:space:]]*)*.",
		  "name": "invalid"
	  },

	  "constants": {
		"match": "falso|verdadero|nulo|infinito|FALSO|VERDADERO|NULO|INFINITO",
		"name": "keyword.letter"
	  },
	  "look_read": {
		"match": "mostrar|leer",
		"name": "color"
	  },
	  "keywords": {
		"match": "(para|mientras|segun_sea|salir|sino|si|caso|defecto|defer|operator|extern|def|const|super|self|retorna|intenta|atrapa|tirar|finalmente|yield|fallthrough|continuar|del|from|import|with|pass|void|type|override|abstract|assert)(?![a-zA-Z_])",
		"name": "key"
	  },
	  "identificador" :{
		 "match": "[a-zA-Z_][a-zA-Z_0-9]*",
		 "name" : "variable"
	  },
	  "Digit": {
		"match" : "[0-9]+",
		"name" : "constant.numeric"
	  },
	  "Operators": {
		"match": "(\\<|\\>|\\+|\\-|\\*|/|=|!=|%|\\^|<<<|>>>|xor|~|<<|>>|y_es|o_es|no|es|en|\\,|\\:|\\.|\\..|\\...|->|as|\\+=|\\-=|\\*=|=|%=|^=|\\++|\\--|==|!|<=|>=|@)(?![a-zA-Z_])",
		"name" : "comment"
	},
	 "types": {
		"match": "(any|entero|entero8|entero16|entero32|entero64|entero128|sin_signo|sin_signo8|sin_signo16|sin_signo32|sin_signo64|sin_signo128|doble|flotante|complejo|cadena|booleano|lista|tupla|conjunto|dict|enum|fun|estructura|clase)(?![0-9])",
		"name" : "entity.name.tag"
	 },
	  "paren-expression": {
		"begin": "\\(|\\{|\\[",
		"end": "\\)|\\}|\\]",
		"beginCaptures": {
		  "0": { "name": "punctuation.paren.open" }
		},
		"endCaptures": {
		  "0": { "name": "punctuation.paren.close" }
		},
		"name": "expression.group",
		"patterns": [{ "include": "#expression" }]
	  }
	}
  }